[{"/src/app/src/index.js":"1","/src/app/src/reportWebVitals.js":"2","/src/app/src/App.js":"3"},{"size":517,"mtime":1731221374216,"results":"4","hashOfConfig":"5"},{"size":375,"mtime":1731221374222,"results":"6","hashOfConfig":"5"},{"size":1952,"mtime":1731235302222,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8s7oda",{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/src/app/src/index.js",[],"/src/app/src/reportWebVitals.js",[],"/src/app/src/App.js",["15","16"],"import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport logo from './logo.svg';\r\n\r\n\r\nexport function App() {\r\n\r\n  const [toDoText, setToDoText] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n  const getAllTodos = async() => {\r\n    try {\r\n      const res = await fetch(`${apiUrl}/todos/`);\r\n      const response = await res.json();\r\n      setTodos(response);\r\n      return response;\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch todos\", error);\r\n    }\r\n  }\r\n  \r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault();\r\n\r\n    if(!toDoText) {\r\n      alert(\"Please enter a ToDo!\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(`${apiUrl}/todos/`,{\r\n        method: 'POST',\r\n        headers:{\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({todo:toDoText})\r\n      });\r\n\r\n      if(response.status === 201) {\r\n        getAllTodos();\r\n        setToDoText(\"\");\r\n      } else{\r\n        console.error(\"Failed to create ToDo!\");\r\n      }\r\n    } catch (error) {\r\n        console.error(\"Failed\",error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllTodos()\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <h1>List of TODOs</h1>\r\n        {\r\n          todos.length > 0 ? todos.map((todo, index) => (\r\n            <li key={index}>{todo.todo}</li>\r\n          )) : <p>No ToDos</p>\r\n        }\r\n      </div>\r\n      <div>\r\n        <h1>Create a ToDo</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label for=\"todo\">ToDo: </label>\r\n            <input type=\"text\" value={toDoText} onChange={(e) => setToDoText(e.target.value)} />\r\n          </div>\r\n          <div style={{\"marginTop\": \"5px\"}}>\r\n            <button>Add ToDo!</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",{"ruleId":"17","severity":1,"message":"18","line":3,"column":8,"nodeType":"19","messageId":"20","endLine":3,"endColumn":12},{"ruleId":"21","severity":1,"message":"22","line":53,"column":6,"nodeType":"23","endLine":53,"endColumn":8,"suggestions":"24"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllTodos'. Either include it or remove the dependency array.","ArrayExpression",["25"],{"desc":"26","fix":"27"},"Update the dependencies array to be: [getAllTodos]",{"range":"28","text":"29"},[1246,1248],"[getAllTodos]"]